The ``add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``add_integer`` module:

	>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Now use it:

	>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
	[[ 7 10]
	 [15 22]]

	>>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
	[[13 16]]

	>>> print(lazy_matrix_mul([[1.8, -2], [-3.6, 0]], [[-3, -4.9], [50, 6.0]]))
	[[-105.4   -20.82]
	 [  10.8    17.64]]

	>>> print(lazy_matrix_mul([[float('inf'), 2], [float('-inf'), 4]], [[1, float('inf')], [3, float('-inf')]]))
	[[ inf  nan]
	 [-inf -inf]]

	>>> print(lazy_matrix_mul([[1, 2], [3, 4]]))
	Traceback (most recent call last):
	...
	TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

	>> print(lazy_matrix_mul())
	Traceback (most recent call last):
	...
	TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	>>> print(lazy_matrix_mul([[1, 2], [2, 3]], [[1, 2], [2, 3], [4, 5]]))
	Traceback (most recent call last):
	...
	ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)

	>>> print(lazy_matrix_mul([[]], [[5, 6], [7, 8]]))
	Traceback (most recent call last):
	...
	ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

	>>> print(lazy_matrix_mul([[5, 6], [7, 8]], [[]]))
	Traceback (most recent call last):
	...
	ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

	>>> print(lazy_matrix_mul("[[5, 6], [7, 8]]", [[5, 6], [7, 8]]))
	Traceback (most recent call last):
	...
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> print(lazy_matrix_mul([[5, 6], [7, 8]], "[[5, 6], [7, 8]]"))
	Traceback (most recent call last):
	...
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> print(lazy_matrix_mul("[[5, 6], [7, 8]]", "[[5, 6], [7, 8]]"))
	Traceback (most recent call last):
	...
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> print(lazy_matrix_mul(None, None))
	Traceback (most recent call last):
	...
	TypeError: Object arrays are not currently supported

	>>> print(lazy_matrix_mul([1, 2], [[3, 4]]))
	Traceback (most recent call last):
	...
	ValueError: shapes (2,) and (1,2) not aligned: 2 (dim 0) != 1 (dim 0)

	>>> print(lazy_matrix_mul([[1, 2]], [3, 4]))
	[11]

	>>> print(lazy_matrix_mul([1, 2], [3, 4]))
	11

	>>> print(lazy_matrix_mul([[1, "non"]], [[3, 4]]))
	Traceback (most recent call last):
	...
	ValueError: shapes (1,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)

	>>> print(lazy_matrix_mul([[5, 6], [7, 8]], [[5, "6"], [7, 8]]))
	Traceback (most recent call last):
	...
	TypeError: invalid data type for einsum

	>>> print(lazy_matrix_mul([[1, "non"]], [[{"test": 404}, 8.8]]))
	Traceback (most recent call last):
	...
	TypeError: Object arrays are not currently supported

	>>> print(lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]]))
	Traceback (most recent call last):
	...
	ValueError: setting an array element with a sequence.

	>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]]))
	Traceback (most recent call last):
	...
	ValueError: setting an array element with a sequence.

	>>> print(lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4, 5]]))
	Traceback (most recent call last):
	...
	ValueError: setting an array element with a sequence.

	>>> module_documentation = __import__("101-lazy_matrix_mul").__doc__
	>>> print(len(module_documentation) > 0)
	True

	>>> function_documentation = __import__("101-lazy_matrix_mul").__doc__
	>>> print(len(function_documentation) > 0)
	True