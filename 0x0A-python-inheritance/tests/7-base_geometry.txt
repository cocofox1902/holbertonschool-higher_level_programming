	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    >>> bg = BaseGeometry()
	>>> type(bg)
	<class '7-base_geometry.BaseGeometry'>

	>>> bg.integer_validator("colas", 24)

	>>> bg.integer_validator("colas", (24))

	>>> bg.integer_validator("", 24)

	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator("colas", "working")
	Traceback (most recent call last):
	...
	TypeError: colas must be an integer

	>>> bg.integer_validator("colas", 6.26)
	Traceback (most recent call last):
	...
	TypeError: colas must be an integer

	>>> bg.integer_validator("colas", -19)
	Traceback (most recent call last):
	...
	ValueError: colas must be greater than 0

	>>> bg.integer_validator("colas", None)
	Traceback (most recent call last):
	...
	TypeError: colas must be an integer

	>>> bg.integer_validator("colas", True)
	Traceback (most recent call last):
	...
	TypeError: colas must be an integer

	>>> bg.integer_validator("colas", {3, 4, 5})
	Traceback (most recent call last):
	...
	TypeError: colas must be an integer

	>>> bg.integer_validator("colas", (3, 4, 5))
	Traceback (most recent call last):
	...
	TypeError: colas must be an integer

	>>> bg.integer_validator("colas", [3, 4, 5])
	Traceback (most recent call last):
	...
	TypeError: colas must be an integer

	>>> bg.integer_validator("colas", 0)
	Traceback (most recent call last):
	...
	ValueError: colas must be greater than 0
